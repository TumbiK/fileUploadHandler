"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Yargs = require("yargs");
const utils_1 = require("../utils");
const manifest = require('../../package.json');
const yargs = Yargs
    .usage('Usage: $0 <command>')
    .command('feature <name>', 'create a new feature branch')
    .command('hotfix <name>', 'create a new hotfix branch')
    .help('help', 'show help')
    .alias('h', 'help')
    .version('version', 'show version', `${manifest.name} ${manifest.version}`)
    .alias('v', 'version');
async function createNewBranch(name) {
    const fetchOriginMasterCmd = 'git fetch origin master';
    utils_1.logger.info(fetchOriginMasterCmd);
    await utils_1.runCommand(fetchOriginMasterCmd);
    const checkoutCmd = `git checkout -b ${name} origin/master`;
    utils_1.logger.info(checkoutCmd);
    await utils_1.runCommand(checkoutCmd);
}
async function cli() {
    const args = yargs.argv._;
    const command = args[0];
    if (typeof command === 'undefined') {
        utils_1.logger.warn('command is not found.');
        yargs.showHelp();
        return;
    }
    switch (command) {
        case 'feature': {
            const branchName = args[1];
            await createNewBranch(`feature/${branchName}`);
            break;
        }
        case 'hotfix': {
            const branchName = args[1];
            await createNewBranch(`hotfix/${utils_1.getCurrentDate()}-${branchName}`);
            break;
        }
    }
}
cli();
