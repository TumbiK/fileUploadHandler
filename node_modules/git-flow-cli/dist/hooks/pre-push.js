"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const base_1 = require("./base");
const utils_1 = require("../utils");
class PrePushHook extends base_1.default {
    constructor() {
        super('pre-push');
    }
    async runDefaultCheck() {
        const branch = await utils_1.getCurrentGitBranch();
        const invalid = /^(master|staging|qa|release|develop)/.test(branch);
        if (invalid) {
            utils_1.logger.error(`branch ${branch} is forbidden to push.`);
        }
        return !invalid;
    }
    async getDefaultCommands() {
        return [];
    }
    getFailureMessage(command) {
        return [
            `your push had been broken by the following command:`,
            '',
            `  ${command}`,
            '',
            'please check your push.',
        ];
    }
}
new PrePushHook();
